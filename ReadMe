# Task Manager Full-Stack App

A simple full-stack task manager application built using React for the front-end and Node.js/Express for the back-end. This project allows users to perform CRUD operations (Create, Read, Update, Delete) on tasks.

## Features

- **Add tasks**: Create new tasks with a title, description, and completion status.
- **View tasks**: Retrieve all tasks or view a specific task by ID.
- **Update tasks**: Modify an existing task's title, description, and completion status.
- **Delete tasks**: Remove a task from the system.

## Tech Stack

- **Front-end**: React
- **Back-end**: Node.js, Express
- **Database**: In-memory array (You can upgrade this to MongoDB or another database in the future)

## Project Structure

```
task-manager/
│
├── client/           (React front-end)
│   ├── src/
│   ├── public/
│   └── package.json
│
└── server/           (Node.js back-end)
    ├── config/
    ├── controllers/
    ├── app.js
    └── package.json
```

## Getting Started

### 1. Clone the repository

```bash
git clone https://github.com/MISHOW2/task-manager-full-stack.git
```

### 2. Install dependencies

#### Front-end (React)

Navigate to the `client` directory and install the dependencies:

```bash
cd client
npm install
```

#### Back-end (Node.js)

Navigate to the `server` directory and install the dependencies:

```bash
cd ../server
npm install
```

### 3. Run the app

#### Start the back-end server

In the `server` directory, start the Node.js server:

```bash
npm start
```

#### Start the front-end development server

In the `client` directory, start the React development server:

```bash
npm start
```

The app will now be running at `http://localhost:3000` for the React front-end and the back-end API will be available at `http://localhost:5000`.

## API Endpoints

- `GET /tasks` – Get all tasks
- `GET /tasks/:id` – Get a specific task by ID
- `POST /tasks` – Create a new task
- `PUT /task/:id` – Update a task by ID
- `DELETE /task/:id` – Delete a task by ID

## License



